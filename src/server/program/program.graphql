type Program {
  id: Int!
  name: String!
  code: String!
  url: String!
  description: String
  structureSource: String
  sequenceSource: String
  handbook: [Handbook!]
  specialisations: [SpecialisationProgram!]
  updated: String
}

input ProgramInput {
  id: Int!
  handbook: [HandbookInput!]!
}

type SpecialisationProgram {
  programId: Int!
  program: Program
  specialisation: Specialisation
  specialisationId: Int!
}

type Specialisation {
  id: Int!
  url: String!
  name: String!
  code: String!
  legacyCode: String
  description: String
  availability: String
  structureSource: String
  sequenceSource: String
  handbook: [Handbook!]
  programs: [SpecialisationProgram!]
  updated: String
}

input SpecialisationInput {
  id: Int!
  handbook: [HandbookInput!]!
}

enum Selection {
  AND
  OR
}

enum NodeType {
  LinkMajor
  LinkMinor
  LinkProgram
  LinkCollection
  LinkElective
  Folder
  Subject
  ConstraintProgram
  ConstraintProgramNot
  Collection
  Program
}

type Handbook {
  # collection: Int
  credits: Int
  flagged: Boolean
  folder: Boolean
  id: Int!
  index: Int
  level: Int
  maxNumber: Int
  nodeId: Int!
  number: Int
  parentId: Int
  program: Program
  programId: Int
  reference: Int
  selection: Selection
  selector: String
  specialisation: Specialisation
  specialisationId: Int
  subjectCode: String
  subjectName: String
  text: String
  type: NodeType
  # collectionChildren: [Handbook!]
}

input HandbookInput {
  id: Int
  nodeId: Int!
  parentId: Int
  text: String
  index: Int
  folder: Boolean
  type: NodeType!
  selection: Selection
  number: Int
  maxNumber: Int
  credits: Int
  level: Int
  reference: Int
  collection: Int
  flagged: Boolean
  selector: String
  subjectCode: String
  subjectName: String
}

type Query {
  programs: [Program!]!
  program(id: Int!): Program
  specialisations: [Specialisation!]!
  specialisation(id: Int!): Specialisation
}

type Mutation {
  saveProgramHandbook(input: ProgramInput!): Program
  saveSpecialisationHandbook(input: SpecialisationInput!): Specialisation
}
